import{_ as s,c as l,b as a,a as t,o as n,r as d}from"./app.867ca285.js";const b=JSON.parse('{"title":"Button 按钮","description":"","frontmatter":{},"headers":[{"level":2,"title":"基础用法","slug":"基础用法","link":"#基础用法","children":[]},{"level":2,"title":"禁用状态","slug":"禁用状态","link":"#禁用状态","children":[]},{"level":2,"title":"链接按钮","slug":"链接按钮","link":"#链接按钮","children":[]},{"level":2,"title":"自定义颜色","slug":"自定义颜色","link":"#自定义颜色","children":[]},{"level":2,"title":"Button 属性","slug":"button-属性","link":"#button-属性","children":[]}],"relativePath":"component/md/button.md"}'),o={name:"component/md/button.md"},c=t('<h1 id="button-按钮" tabindex="-1">Button 按钮 <a class="header-anchor" href="#button-按钮" aria-hidden="true">#</a></h1><p>常用的操作按钮。</p><h2 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-hidden="true">#</a></h2><h6 id="输入" tabindex="-1">输入 <a class="header-anchor" href="#输入" aria-hidden="true">#</a></h6><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">&lt;demo src=&quot;../component/button.vue&quot; desc=&quot;使用 `type`、`plain`、`round` 和 `circle` 来定义按钮的样式。&quot;&gt;&lt;/demo&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h6 id="输出" tabindex="-1">输出 <a class="header-anchor" href="#输出" aria-hidden="true">#</a></h6>',6),i=t('<h2 id="禁用状态" tabindex="-1">禁用状态 <a class="header-anchor" href="#禁用状态" aria-hidden="true">#</a></h2><h6 id="输入-1" tabindex="-1">输入 <a class="header-anchor" href="#输入-1" aria-hidden="true">#</a></h6><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">&lt;demo src=&quot;../component/button-disabled.vue&quot; desc=&quot;使用 `disabled`来定义按钮的禁用。&quot;&gt;&lt;/demo&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h6 id="输出-1" tabindex="-1">输出 <a class="header-anchor" href="#输出-1" aria-hidden="true">#</a></h6>',4),r=t(`<h2 id="链接按钮" tabindex="-1">链接按钮 <a class="header-anchor" href="#链接按钮" aria-hidden="true">#</a></h2><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p><code>type=&quot;text&quot;</code> 已被 废弃，将于版本 3.0.0 时 移除，请考虑切换至新的 API。</p><p>新的 API <code>link</code> 于 2.2.1 版本添加，同时可以使用 type API 设置链接按钮的主题样式。</p></div><h6 id="输入-2" tabindex="-1">输入 <a class="header-anchor" href="#输入-2" aria-hidden="true">#</a></h6><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">&lt;demo src=&quot;../component/button-link.vue&quot;&gt;&lt;/demo&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h6 id="输出-2" tabindex="-1">输出 <a class="header-anchor" href="#输出-2" aria-hidden="true">#</a></h6>`,5),h=t(`<h2 id="自定义颜色" tabindex="-1">自定义颜色 <a class="header-anchor" href="#自定义颜色" aria-hidden="true">#</a></h2><p>除了默认的大小，按钮组件还提供了几种额外的尺寸可供选择，以便适配不同的场景。</p><p>使用 <code>size</code> 属性额外配置尺寸，可使用 <code>large</code>和<code>small</code>两种值。</p><h6 id="输入-3" tabindex="-1">输入 <a class="header-anchor" href="#输入-3" aria-hidden="true">#</a></h6><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">&lt;demo src=&quot;../component/button-size.vue&quot;&gt;&lt;/demo&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h6 id="输出-3" tabindex="-1">输出 <a class="header-anchor" href="#输出-3" aria-hidden="true">#</a></h6>`,6),p=t('<h2 id="button-属性" tabindex="-1">Button 属性 <a class="header-anchor" href="#button-属性" aria-hidden="true">#</a></h2><table><thead><tr><th style="text-align:left;">属性名</th><th style="text-align:left;">说明</th><th style="text-align:left;">类型</th><th style="text-align:left;">可选值</th><th style="text-align:left;">默认值</th></tr></thead><tbody><tr><td style="text-align:left;">size</td><td style="text-align:left;">尺寸</td><td style="text-align:left;">string</td><td style="text-align:left;">large / default /small</td><td style="text-align:left;">—</td></tr><tr><td style="text-align:left;">type</td><td style="text-align:left;">类型</td><td style="text-align:left;">string</td><td style="text-align:left;">primary / success / warning / danger / info / text</td><td style="text-align:left;">—</td></tr><tr><td style="text-align:left;">round</td><td style="text-align:left;">是否为圆角按钮</td><td style="text-align:left;">boolean</td><td style="text-align:left;">—</td><td style="text-align:left;">false</td></tr><tr><td style="text-align:left;">circle</td><td style="text-align:left;">是否为圆形按钮</td><td style="text-align:left;">boolean</td><td style="text-align:left;">—</td><td style="text-align:left;">false</td></tr></tbody></table>',2);function E(C,u,_,A,g,y){const e=d("demo");return n(),l("div",null,[c,a(e,{src:"../component/button.vue",desc:"使用 `type`、`plain`、`round` 和 `circle` 来定义按钮的样式。",codeStr:"src%E6%96%87%E4%BB%B6%E4%B8%8D%E5%AD%98%E5%9C%A8",htmlStr:"%3Cpre%20class%3D%22shiki%22%20style%3D%22background-color%3A%20%23292D3E%22%3E%3Ccode%3E%3Cspan%20class%3D%22line%22%3E%3Cspan%20style%3D%22color%3A%20%23A6ACCD%22%3Esrc%E6%96%87%E4%BB%B6%E4%B8%8D%E5%AD%98%E5%9C%A8%3C%2Fspan%3E%3C%2Fspan%3E%3C%2Fcode%3E%3C%2Fpre%3E",description:"%E4%BD%BF%E7%94%A8%20%3Ccode%3Etype%3C%2Fcode%3E%E3%80%81%3Ccode%3Eplain%3C%2Fcode%3E%E3%80%81%3Ccode%3Eround%3C%2Fcode%3E%20%E5%92%8C%20%3Ccode%3Ecircle%3C%2Fcode%3E%20%E6%9D%A5%E5%AE%9A%E4%B9%89%E6%8C%89%E9%92%AE%E7%9A%84%E6%A0%B7%E5%BC%8F%E3%80%82",codePath:""}),i,a(e,{src:"../component/button-disabled.vue",desc:"使用 `disabled`来定义按钮的禁用。",codeStr:"src%E6%96%87%E4%BB%B6%E4%B8%8D%E5%AD%98%E5%9C%A8",htmlStr:"%3Cpre%20class%3D%22shiki%22%20style%3D%22background-color%3A%20%23292D3E%22%3E%3Ccode%3E%3Cspan%20class%3D%22line%22%3E%3Cspan%20style%3D%22color%3A%20%23A6ACCD%22%3Esrc%E6%96%87%E4%BB%B6%E4%B8%8D%E5%AD%98%E5%9C%A8%3C%2Fspan%3E%3C%2Fspan%3E%3C%2Fcode%3E%3C%2Fpre%3E",description:"%E4%BD%BF%E7%94%A8%20%3Ccode%3Edisabled%3C%2Fcode%3E%E6%9D%A5%E5%AE%9A%E4%B9%89%E6%8C%89%E9%92%AE%E7%9A%84%E7%A6%81%E7%94%A8%E3%80%82",codePath:""}),r,a(e,{src:"../component/button-link.vue",codeStr:"src%E6%96%87%E4%BB%B6%E4%B8%8D%E5%AD%98%E5%9C%A8",htmlStr:"%3Cpre%20class%3D%22shiki%22%20style%3D%22background-color%3A%20%23292D3E%22%3E%3Ccode%3E%3Cspan%20class%3D%22line%22%3E%3Cspan%20style%3D%22color%3A%20%23A6ACCD%22%3Esrc%E6%96%87%E4%BB%B6%E4%B8%8D%E5%AD%98%E5%9C%A8%3C%2Fspan%3E%3C%2Fspan%3E%3C%2Fcode%3E%3C%2Fpre%3E",description:"",codePath:""}),h,a(e,{src:"../component/button-size.vue",codeStr:"src%E6%96%87%E4%BB%B6%E4%B8%8D%E5%AD%98%E5%9C%A8",htmlStr:"%3Cpre%20class%3D%22shiki%22%20style%3D%22background-color%3A%20%23292D3E%22%3E%3Ccode%3E%3Cspan%20class%3D%22line%22%3E%3Cspan%20style%3D%22color%3A%20%23A6ACCD%22%3Esrc%E6%96%87%E4%BB%B6%E4%B8%8D%E5%AD%98%E5%9C%A8%3C%2Fspan%3E%3C%2Fspan%3E%3C%2Fcode%3E%3C%2Fpre%3E",description:"",codePath:""}),p])}const f=s(o,[["render",E]]);export{b as __pageData,f as default};
