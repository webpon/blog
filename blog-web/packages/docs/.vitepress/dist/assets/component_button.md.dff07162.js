import{_ as t,c as e,o as d,a as o}from"./app.40dc24c8.js";const m=JSON.parse('{"title":"Button","description":"","frontmatter":{"title":"Button","lang":"en-US"},"headers":[{"level":2,"title":"Basic usage","slug":"basic-usage","link":"#basic-usage","children":[]},{"level":2,"title":"Disabled Button","slug":"disabled-button","link":"#disabled-button","children":[]},{"level":2,"title":"Text Button","slug":"text-button","link":"#text-button","children":[]},{"level":2,"title":"Sizes","slug":"sizes","link":"#sizes","children":[]},{"level":2,"title":"Custom Color","slug":"custom-color","link":"#custom-color","children":[]},{"level":2,"title":"Button Attributes","slug":"button-attributes","link":"#button-attributes","children":[]},{"level":2,"title":"Button Slots","slug":"button-slots","link":"#button-slots","children":[]}],"relativePath":"component/button.md"}'),a={name:"component/button.md"},n=o('<h1 id="button" tabindex="-1">Button <a class="header-anchor" href="#button" aria-hidden="true">#</a></h1><p>Commonly used button.</p><h2 id="basic-usage" tabindex="-1">Basic usage <a class="header-anchor" href="#basic-usage" aria-hidden="true">#</a></h2><p>:::demo Use <code>type</code>, <code>plain</code>, <code>round</code> and <code>circle</code> to define Button&#39;s style.</p><p>button/basic</p><p>:::</p><h2 id="disabled-button" tabindex="-1">Disabled Button <a class="header-anchor" href="#disabled-button" aria-hidden="true">#</a></h2><p>The <code>disabled</code> attribute determines if the button is disabled.</p><p>:::demo Use <code>disabled</code> attribute to determine whether a button is disabled. It accepts a <code>Boolean</code> value.</p><p>button/disabled</p><p>:::</p><h2 id="text-button" tabindex="-1">Text Button <a class="header-anchor" href="#text-button" aria-hidden="true">#</a></h2><p>Buttons without border and background.</p><p>:::demo</p><p>button/text</p><p>:::</p><h2 id="sizes" tabindex="-1">Sizes <a class="header-anchor" href="#sizes" aria-hidden="true">#</a></h2><p>Besides default size, Button component provides three additional sizes for you to choose among different scenarios.</p><p>:::demo Use attribute <code>size</code> to set additional sizes with <code>large</code>, <code>small</code>.</p><p>button/size</p><p>:::</p><h2 id="custom-color" tabindex="-1">Custom Color <a class="header-anchor" href="#custom-color" aria-hidden="true">#</a></h2><p>You can custom button color.</p><p>We will calculate hover color &amp; active color automatically.</p><p>:::demo</p><p>button/custom</p><p>:::</p><h2 id="button-attributes" tabindex="-1">Button Attributes <a class="header-anchor" href="#button-attributes" aria-hidden="true">#</a></h2><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Accepted Values</th><th>Default</th></tr></thead><tbody><tr><td>size</td><td>button size</td><td>string</td><td>large / default /small</td><td>—</td></tr><tr><td>type</td><td>button type</td><td>string</td><td>primary / success / warning / danger / info / text</td><td>—</td></tr><tr><td>plain</td><td>determine whether it&#39;s a plain button</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>round</td><td>determine whether it&#39;s a round button</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>circle</td><td>determine whether it&#39;s a circle button</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>disabled</td><td>disable the button</td><td>boolean</td><td>—</td><td>false</td></tr></tbody></table><h2 id="button-slots" tabindex="-1">Button Slots <a class="header-anchor" href="#button-slots" aria-hidden="true">#</a></h2><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>—</td><td>customize default content</td></tr></tbody></table>',31),i=[n];function s(r,l,u,c,h,b){return d(),e("div",null,i)}const f=t(a,[["render",s]]);export{m as __pageData,f as default};
