import{_ as s,c as n,o as a,a as l}from"./app.e2a6dfd5.js";const F=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"front-end/工程化体系/Rollup.md"}'),p={name:"front-end/工程化体系/Rollup.md"},o=l(`<h5 id="简单实用" tabindex="-1">简单实用 <a class="header-anchor" href="#简单实用" aria-hidden="true">#</a></h5><blockquote><p>Rollup同样是一款ES Module打包器，从作用来看，Rollup与Webpack很相似，但Rollup更为小巧，仅仅是一款ESM打包器；比如Rollup中不不支持类似的HMR这种高级特性</p><p>Rollup是为了提供一个充分利用ESM各项特性的高效（结构比较扁平，性能比较出众的类库）打包器</p></blockquote><p>快速使用：</p><p>（1）安装：npm i rollup -g</p><p>（2）使用说明：rollup -h</p><p>（3）项目开始：</p><p>首先，我们需要个 入口。将以下代码粘贴到新建的文件 <code>src/main.js</code> 中：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">     // src/main.js</span></span>
<span class="line"><span style="color:#A6ACCD;">     import foo from &#39;./foo.js&#39;;</span></span>
<span class="line"><span style="color:#A6ACCD;">     export default function () {</span></span>
<span class="line"><span style="color:#A6ACCD;">       console.log(foo);</span></span>
<span class="line"><span style="color:#A6ACCD;">     }</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>之后创建入口文件引用的 <code>foo.js</code> 模块：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">     // src/foo.js</span></span>
<span class="line"><span style="color:#A6ACCD;">     export default &#39;hello world!&#39;;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>现在可以创建 bundle 了：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">     // cjs -&gt; commonjs es-&gt;es module</span></span>
<span class="line"><span style="color:#A6ACCD;">     rollup src/main.js -o bundle.js -f cjs</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h5 id="使用配置文件" tabindex="-1">使用配置文件 <a class="header-anchor" href="#使用配置文件" aria-hidden="true">#</a></h5><blockquote><p>上面的方式还不错，但是如果添加更多的选项，这种命令行的方式就显得麻烦了。</p><p>为此，我们可以创建配置文件来囊括所需的选项。配置文件由 JavaScript 写成，比 CLI 更加灵活。</p></blockquote><p>在项目中创建一个名为 <code>rollup.config.js</code> 的文件，增加如下代码：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">     // rollup.config.js</span></span>
<span class="line"><span style="color:#A6ACCD;">     export default {</span></span>
<span class="line"><span style="color:#A6ACCD;">       input: &#39;src/main.js&#39;,</span></span>
<span class="line"><span style="color:#A6ACCD;">       output: {</span></span>
<span class="line"><span style="color:#A6ACCD;">         file: &#39;bundle.js&#39;,</span></span>
<span class="line"><span style="color:#A6ACCD;">         format: &#39;cjs&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">       }</span></span>
<span class="line"><span style="color:#A6ACCD;">     };</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>我们用 <code>--config</code> 或 <code>-c</code> 来使用配置文件，如果不知名配置文件，则默认取当前目录下的rollup.config.js：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">     rm bundle.js # so we can check the command works!</span></span>
<span class="line"><span style="color:#A6ACCD;">     rollup -c</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>同样的命令行选项将会覆盖配置文件中的选项：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">rollup</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-c</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-o</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">bundle-2.js</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># \`-o\` is short for \`--output.file\`</span></span>
<span class="line"></span></code></pre></div><p>（注意 Rollup 本身会处理配置文件，所以可以使用 <code>export default</code> 语法——代码不会经过 Babel 等类似工具编译，所以只能使用所用 Node.js 版本支持的 ES2015 语法。）</p><p>如果愿意的话，也可以指定与默认 <code>rollup.config.js</code> 文件不同的配置文件：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">     rollup --config rollup.config.dev.js</span></span>
<span class="line"><span style="color:#A6ACCD;">     rollup --config rollup.config.prod.js</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h5 id="使用插件" tabindex="-1">使用插件 <a class="header-anchor" href="#使用插件" aria-hidden="true">#</a></h5><blockquote><p>目前为止，我们通过相对路径，将一个入口文件和一个模块创建成了一个简单的 bundle。随着构建更复杂的 bundle，通常需要更大的灵活性——引入 npm 安装的模块、通过 Babel 编译代码、和 JSON 文件打交道等。</p><p>为此，我们可以用 <em>插件(plugins)</em> 在打包的关键过程中更改 Rollup 的行为。<a href="https://github.com/rollup/rollup/wiki/Plugins" target="_blank" rel="noreferrer">the Rollup wiki</a> 维护了可用的插件列表。</p></blockquote><p>此教程中，我们将使用 <a href="https://github.com/rollup/rollup-plugin-json" target="_blank" rel="noreferrer">rollup-plugin-json</a>，令 Rollup 从 JSON 文件中读取数据。</p><p>将 rollup-plugin-json 安装为开发依赖：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--save-dev</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rollup-plugin-json</span></span>
<span class="line"></span></code></pre></div><p>（我们用的是 <code>--save-dev</code> 而不是 <code>--save</code>，因为代码实际执行时不依赖这个插件——只是在打包时使用。）</p><p>更新 <code>src/main.js</code> 文件，从 package.json 而非 <code>src/foo.js</code> 中读取数据：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">     </span><span style="color:#676E95;font-style:italic;">// src/main.js</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">version</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">../package.json</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">version </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">version</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">     </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>编辑 <code>rollup.config.js</code> 文件，加入 JSON 插件：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">     </span><span style="color:#676E95;font-style:italic;">// rollup.config.jsimport json from &#39;rollup-plugin-json&#39;;</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">input</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">src/main.js</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">output</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">               </span><span style="color:#F07178;">file</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">bundle.js</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">               </span><span style="color:#F07178;">format</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">cjs</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">plugins</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [ </span><span style="color:#82AAFF;">json</span><span style="color:#A6ACCD;">() ]</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div><p><code>npm run build</code> 执行 Rollup。结果如下：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">use strict</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> version </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1.0.0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> main </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">version </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">version</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">     </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> main</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>（注意只有我们实际需要的数据——name 和 devDependencies 和 package.json 中的其它数据被忽略了。这是 tree-shaking 起了作用。）</p><p>详情请访问：<a href="https://www.rollupjs.com/guide/tutorial" target="_blank" rel="noreferrer">https://www.rollupjs.com/guide/tutorial</a></p><h5 id="javascipt-api" tabindex="-1">Javascipt API <a class="header-anchor" href="#javascipt-api" aria-hidden="true">#</a></h5><blockquote><p>Rollup 提供 JavaScript 接口那样可以通过 Node.js 来使用。你可以很少使用，而且很可能使用命令行接口，</p><p>除非你想扩展 Rollup 本身，或者用于一些难懂的任务，例如用代码把文件束生成出来。</p></blockquote><h5 id="rollup-rollup" tabindex="-1">rollup.rollup <a class="header-anchor" href="#rollup-rollup" aria-hidden="true">#</a></h5><p>The <code>rollup.rollup</code> 函数返回一个 Promise，它解析了一个 <code>bundle</code> 对象，此对象带有不同的属性及方法，如下：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> rollup </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">rollup</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">     </span><span style="color:#676E95;font-style:italic;">// see below for details on the options</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> inputOptions </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{...};</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> outputOptions </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{...};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">build</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">       </span><span style="color:#676E95;font-style:italic;">// create a bundle</span></span>
<span class="line"><span style="color:#F07178;">       </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">bundle</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">rollup</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">rollup</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">inputOptions</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">       </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">bundle</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">imports</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// an array of external dependencies</span></span>
<span class="line"><span style="color:#F07178;">       </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">bundle</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">exports</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// an array of names exported by the entry point</span></span>
<span class="line"><span style="color:#F07178;">       </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">bundle</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">modules</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// an array of module objects</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">       </span><span style="color:#676E95;font-style:italic;">// generate code and a sourcemap</span></span>
<span class="line"><span style="color:#F07178;">       </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">code</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">map</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">bundle</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">generate</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">outputOptions</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">       </span><span style="color:#676E95;font-style:italic;">// or write the bundle to disk</span></span>
<span class="line"><span style="color:#F07178;">       </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">bundle</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">write</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">outputOptions</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">     </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#82AAFF;">build</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>复制</p><h5 id="输入参数-inputoptions" tabindex="-1">输入参数(inputOptions) <a class="header-anchor" href="#输入参数-inputoptions" aria-hidden="true">#</a></h5><p><code>inputOptions</code> 对象包含下列属性 (查看<a href="https://www.rollupjs.com/guide/big-list-of-options" target="_blank" rel="noreferrer">big list of options</a> 以获得这些参数更详细的资料):</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> inputOptions </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">       </span><span style="color:#676E95;font-style:italic;">// 核心参数</span></span>
<span class="line"><span style="color:#A6ACCD;">       input</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 唯一必填参数</span></span>
<span class="line"><span style="color:#A6ACCD;">       external</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">       plugins</span><span style="color:#89DDFF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">       </span><span style="color:#676E95;font-style:italic;">// 高级参数</span></span>
<span class="line"><span style="color:#A6ACCD;">       onwarn</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">       cache</span><span style="color:#89DDFF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">       </span><span style="color:#676E95;font-style:italic;">// 危险参数</span></span>
<span class="line"><span style="color:#A6ACCD;">       acorn</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">       context</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">       moduleContext</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">       legacy</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div><p>复制</p><h5 id="输出参数-outputoptions" tabindex="-1">输出参数(outputOptions) <a class="header-anchor" href="#输出参数-outputoptions" aria-hidden="true">#</a></h5><p><code>outputOptions</code> 对象包括下列属性 (查看 <a href="https://www.rollupjs.com/guide/big-list-of-options" target="_blank" rel="noreferrer">big list of options</a> 以获得这些参数更详细的资料):</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> outputOptions </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">       </span><span style="color:#676E95;font-style:italic;">// 核心参数</span></span>
<span class="line"><span style="color:#A6ACCD;">       file</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">   </span><span style="color:#676E95;font-style:italic;">// 若有bundle.write，必填</span></span>
<span class="line"><span style="color:#A6ACCD;">       format</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 必填</span></span>
<span class="line"><span style="color:#A6ACCD;">       name</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">       globals</span><span style="color:#89DDFF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">       </span><span style="color:#676E95;font-style:italic;">// 高级参数</span></span>
<span class="line"><span style="color:#A6ACCD;">       paths</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">       banner</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">       footer</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">       intro</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">       outro</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">       sourcemap</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">       sourcemapFile</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">       interop</span><span style="color:#89DDFF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">       </span><span style="color:#676E95;font-style:italic;">// 危险区域</span></span>
<span class="line"><span style="color:#A6ACCD;">       exports</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">       amd</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">       indent</span></span>
<span class="line"><span style="color:#A6ACCD;">       strict</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div><p><strong>rollup.watch</strong></p><p>Rollup 也提供了 <code>rollup.watch</code> 函数，当它检测到磁盘上单个模块已经改变，它会重新构建你的文件束。 当你通过命令行运行 Rollup，并带上 <code>--watch</code> 标记时，此函数会被内部使用。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> rollup </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">rollup</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> watchOptions </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{...};</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> watcher </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> rollup</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">watch</span><span style="color:#A6ACCD;">(watchOptions)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">     watcher</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">on</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">event</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">event</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">       </span><span style="color:#676E95;font-style:italic;">// event.code 会是下面其中一个：</span></span>
<span class="line"><span style="color:#89DDFF;">       </span><span style="color:#676E95;font-style:italic;">//   START        — 监听器正在启动（重启）</span></span>
<span class="line"><span style="color:#89DDFF;">       </span><span style="color:#676E95;font-style:italic;">//   BUNDLE_START — 构建单个文件束</span></span>
<span class="line"><span style="color:#89DDFF;">       </span><span style="color:#676E95;font-style:italic;">//   BUNDLE_END   — 完成文件束构建</span></span>
<span class="line"><span style="color:#89DDFF;">       </span><span style="color:#676E95;font-style:italic;">//   END          — 完成所有文件束构建</span></span>
<span class="line"><span style="color:#89DDFF;">       </span><span style="color:#676E95;font-style:italic;">//   ERROR        — 构建时遇到错误</span></span>
<span class="line"><span style="color:#89DDFF;">       </span><span style="color:#676E95;font-style:italic;">//   FATAL        — 遇到无可修复的错误</span></span>
<span class="line"><span style="color:#F07178;">     </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">     </span><span style="color:#676E95;font-style:italic;">// 停止监听</span></span>
<span class="line"><span style="color:#A6ACCD;">     watcher</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">close</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h5 id="监听参数-watchoptions" tabindex="-1">监听参数(watchOptions) <a class="header-anchor" href="#监听参数-watchoptions" aria-hidden="true">#</a></h5><p><code>watchOptions</code> 参数是一个你会从一个配置文件中导出的配置 (或一个配置数据)。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> watchOptions </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">inputOptions</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#F07178;">output</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [outputOptions]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#F07178;">watch</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">         chokidar</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">         include</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">         exclude</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div>`,56),e=[o];function t(c,r,y,D,i,C){return a(),n("div",null,e)}const d=s(p,[["render",t]]);export{F as __pageData,d as default};
